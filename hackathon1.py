import random
import time

global total_points, intelligence, agility, strength, name, level
strength = 0
agility = 0
intelligence = 0
total_points = 10

game_over = """
  ▄▀  ██   █▀▄▀█ ▄███▄       ████▄     ▄   ▄███▄   █▄▄▄▄ 
▄▀    █ █  █ █ █ █▀   ▀      █   █      █  █▀   ▀  █  ▄▀ 
█ ▀▄  █▄▄█ █ ▄ █ ██▄▄        █   █ █     █ ██▄▄    █▀▀▌  
█   █ █  █ █   █ █▄   ▄▀     ▀████  █    █ █▄   ▄▀ █  █  
 ███     █    █  ▀███▀               █  █  ▀███▀     █   
        █    ▀                        █▐            ▀    
       ▀                              ▐                
"""

arrow = ">>>--->"


def menu():
    global total_points, intelligence, agility, strength, name
    while True:
        print("""Меню:
            1. Грати наступний рівень
            2. Показати інформацію про персонажа
            3. Змінити ім'я
            4. Використати додаткові очки характеристик
            5. Вийти""")
        print("Оберіть опцію:")
        menu_choice = input(arrow)
        if menu_choice == "exit":
            if input(f"Ви бажаєте вийти? (yes/no)\n{arrow} ") == "yes":
                exit(0)

        if menu_choice == "1":
            if level_1_beated == 0:
                print("Граємо наступний рівень!")
                level_1()
                break
            elif level_2_beated == 0:
                print("Граємо наступний рівень!")
                level_2()
                break
            elif level_3_beated == 0:
                print("Граємо наступний рівень!")
                level_3()
                break
            else:
                print("Ви пройшли гру!")
        elif menu_choice == "2":
            print(f"""
            Рівень: {level}
            Ім'я: {name}
            Раса: {race}
            Вік: {age}
            Сила: {strength}
            Спритність: {agility}
            Інтелект: {intelligence}""")

        elif menu_choice == "3":
            while True:
                print("Введіть нове ім'я:")
                new_name = input(arrow)
                if new_name == "exit":
                    if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
                        exit(0)
                if new_name.isalpha():
                    name = new_name
                    print(f"Ім'я змінено на {name}")
                    break
                else:
                    print("Ім’я не повинно мати цифр.")

        elif menu_choice == "4":
            print("Ви маєте додаткові очки характеристик.")
            print(f"Залишилося очок: {total_points}")
            print("Оберіть характеристику (1 - Сила, 2 - Спритність, 3 - Інтелект):")
            attribute_choice = input(arrow)
            if attribute_choice == "exit":
                if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
                    exit(0)
            if attribute_choice == "1":
                strength += 1
                total_points -= 1
                print("Сила збільшена на 1")
            elif attribute_choice == "2":
                agility += 1
                total_points -= 1
                print("Спритність збільшена на 1")
            elif attribute_choice == "3":
                intelligence += 1
                total_points -= 1
                print("Інтелект збільшений на 1")
            else:
                print("Некоректний вибір.")
        elif menu_choice == "5":
            print("Гра завершена. До побачення!")
            break
        else:
            print("Некоректний вибір. Оберіть опцію з меню.")


level_1_beated = 0
level_2_beated = 0
level_3_beated = 0


def level_1():
    min_number = 0
    max_number = 10
    attempts = 5

    secret_number = random.randint(min_number, max_number)

    print(f"""
█     ▄███▄      ▄   ▄███▄   █         ████▄    ▄   ▄███▄   
█     █▀   ▀      █  █▀   ▀  █         █   █     █  █▀   ▀  
█     ██▄▄   █     █ ██▄▄    █         █   █ ██   █ ██▄▄    
███▄  █▄   ▄▀ █    █ █▄   ▄▀ ███▄      ▀████ █ █  █ █▄   ▄▀ 
    ▀ ▀███▀    █  █  ▀███▀       ▀           █  █ █ ▀███▀   
                █▐                           █   ██         
                ▐                                                           
Коли ви заходите глибше в підземелля, ви натрапляєте на містичну кімнату, 
охоплену моторошним м’яким сяйвом. У центрі кімнати ви знаходите 
старовинний вишуканий постамент, на якому лежить кришталева куля. 
Усередині кулі ви бачите закручений вихор чисел.

Таємничий голос лунає камерою:

«Ласкаво просимо, хоробрий шукаче пригод, до Кімнати чарівної загадки. 
Щоб продовжити, ви повинні довести свою кмітливість. 
Ось я загадую вам загадку. Вгадайте правильне число, і шлях відкриється».

Кришталева куля починає мерехтіти, відкриваючи загадку:

«Я — число від {min_number} до {max_number}, приховане в тумані часу й магії. 
У вас є {attempts} спроби розкрити мою таємницю. Обирайте мудро».

Ви витрачаєте хвилинку, щоб поміркувати над загадкою, а 
потім робите своє перше припущення. """)

    print(f"Вгадайте число від {min_number} до {max_number}.")
    print(f"У вас є {attempts} спроби.")

    for attempt in range(1, attempts + 1):
        while True:
            try:
                guess = int(input(f"""Спроба #{attempt}: Введіть вашу догадку:
{arrow}"""))
                if guess == "exit":
                    if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
                        exit(0)
                break
            except ValueError:
                print("Будь ласка, введіть ціле число.")

        if guess == secret_number:
            print("""
Зі сплеском очікування ви робите припущення, і кришталева куля 
відповідає яскравим сяючим світлом. Камера злегка тремтить, і ви 
знову чуєте голос, сповнений схвалення:

«Вітаю, відважний шукаче пригод! Ви розкрили таємницю Зачарованої загадки. 
Магія в кімнаті відповідає вашій мудрості».

Коли світло гасне, стародавній постамент опускається на підлогу, 
відкриваючи прохід, що веде глибше в підземелля. 
Ви успішно пройшли перше випробування і тепер стоїте на порозі 
більших пригод. Ваша подорож триває, сповнена таємниць, викликів 
і скарбів, які ще належить відкрити.

Тисніть далі, бо доля кличе ваше ім'я».""")
            global total_points, level, level_1_beated
            total_points += 1
            level += 1
            level_1_beated = 1
            menu()
            break

        elif guess < secret_number:
            print("""
Кришталева куля реагує, і голос відповідає:
«Вихор заворушився, але ваша здогадка не зовсім вірна. Справжнє
число більшe. Спробуйте ще раз».""")

        else:
            print("""
Кришталева куля реагує, і голос відповідає:
«Вихор заворушився, але ваша здогадка не зовсім вірна. Справжнє
число менше. Спробуйте ще раз».""")
        if attempt == attempts - 1:
            print("""
Коли ви робите свою останню спробу, кристалічна куля пульсує в очікуванні. 
Голос повертається востаннє:

«Ах, ви дійшли до своєї останньої спроби. Подивимося, 
чи прихильною до вас сьогодні буде доля».

Ваше серце прискорюється, поки ви очікуєте остаточного вердикту кулі. 
Успіх може виявити шлях вперед, але невдача може мати непередбачені 
наслідки. Містична кімната затамувала подих, чекаючи вашого рішення.

Ви розгадаєте Зачаровану Загадку і продовжите свою пригоду, 
чи секрети кімнати залишаться закритими?""")

    else:
        print(f"""На жаль, ви не вгадали число. Загадане число було: {secret_number}
        {game_over}""")


def level_2_doors_generator():
    # Створюємо список з трьох дверей, де одна з них веде до виграшу (позначена як 'W'),
    # а дві інші ведуть до програшу (позначені як 'L').
    doors = ['L', 'L', 'W']
    # Випадковим чином перемішуємо двері, щоб місце виграшу було випадковим.
    random.shuffle(doors)
    return doors


def level_2():
    print("""
█     ▄███▄      ▄   ▄███▄   █            ▄▄▄▄▀ ▄ ▄   ████▄ 
█     █▀   ▀      █  █▀   ▀  █         ▀▀▀ █   █   █  █   █ 
█     ██▄▄   █     █ ██▄▄    █             █  █ ▄   █ █   █ 
███▄  █▄   ▄▀ █    █ █▄   ▄▀ ███▄         █   █  █  █ ▀████ 
    ▀ ▀███▀    █  █  ▀███▀       ▀       ▀     █ █ █        
                █▐                              ▀ ▀         
                ▐                                           


Ви опиняєтесь у великому залі, прикрашеному розкішними гобеленами та 
складним різьбленням. У центрі кімнати є троє вишуканих дверей, 
кожна з яких веде до іншого таємничого пункту призначення. 
Коли ви наближаєтеся, залою лунає чарівний голос:

«Ласкаво просимо назад, безстрашний шукаче пригод, 
у місце, де буде перевірена інтуїція. Ви стоїте перед 
парадоксом Монті Голла, головоломкою ймовірностей і варіантів. 
Чи готові ви розгадати його таємниці?»

Голос продовжує:

«За одними з цих трьох дверей ховається неймовірний скарб, 
а за двома іншими, ну, скажімо так, є щось менш бажане. 
Ваша мета проста: вибрати одні двері.

Коли ви розмірковуєте над загадковим викликом, який стоїть перед вами, 
голос підбадьорює вас:

«Зроби свій вибір мудро, авантюристe, і нехай парадокс Монті Голла 
почнеться!»""")
    while True:
        doors = level_2_doors_generator()
        while True:
            try:
                user_choice = int(input(arrow))
                if user_choice == "exit":
                    if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
                        exit(0)
                if 1 <= user_choice <= 3:
                    break
                else:
                    print("Введіть корректне число")
            except ValueError:
                print("Введіть корректне число.")

        # Показуємо, яка двері містить виграш і яку із двох інших дверей можна відкрити,
        # де знаходиться програш. Випадково обираємо двері для відкриття.
        open_doors = [i for i in range(1, 4) if i != user_choice and doors[i - 1] == 'L']
        opened_door = random.choice(open_doors)
        print(f"""
Ви ретельно робите свій початковий вибір, вказуючи на одну з трьох дверей. 
Голос підтверджує ваш вибір знаючим тоном:

«Чудово, відважний шукаче пригод. Ви вибрали двері {user_choice}».

Поки ви очікуєте відкриття, голос додає:

«Тепер давайте додамо родзинку цьому виклику. Перш ніж я покажу, 
що знаходиться за вибраними вами дверима, 
дозвольте мені зробити речі цікавішими. З двох дверей, що залишилися, 
вам буде показана одна, яка розкриє результат, якого ви б уникали..."

З драматичним розмахом двері {opened_door} відчиняються, 
показуючи кімнату з кровожерливими тиграми. Голос продовжує:

«Розумієте, авантюристе, тепер у вас є унікальна можливість. 
Ви можете залишитися при своєму початковому виборі або 
перейти до інших невідкритих дверей. Рішення за вами».

Чи бажаєте ви змінити свій вибір на інші двері?
1.Так
2.Ні""")

        while True:
            change_choice = input(arrow)
            if change_choice == "exit":
                if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
                    exit(0)
            if change_choice == '1':
                user_choice = [i for i in range(1, 4) if i != user_choice and i != opened_door][0]
                break
            elif change_choice == '2':
                break
            else:
                print("Введіть корректне число.")

        if doors[user_choice - 1] == 'W':
            print("""
Прийнявши продумане рішення, ви зробите свій вибір. 
Голос схвально киває, а потім драматично заявляє:

«Дозвольте нам відкрити правду за обраними вами дверима».

Вибрані вами двері повільно відчиняються, і, на ваше здивування, 
перед вами розсипається приголомшлива низка скарбів. 
Золоті монети, дорогоцінні камені та артефакти невимовної цінності 
виблискують у м’якому світлі кімнати (Ви виграли).

Голос знову промовляє, сповнений захоплення:

«Вітаю, мудрий шукаче пригод! Ви подолали парадокс Монті-Голла та 
заволоділи бажаним скарбом. Ваша інтуїція та сміливість виправдалися».

Коли ви насолоджуєтеся своєю перемогою, ви не можете не відчувати 
почуття досягнення та хвилювання перед пригодами, 
які чекають попереду. Ви ще раз довели свою мужність, 
і ваша подорож продовжується, насиченішою та захопливішою, 
ніж будь-коли раніше.

Молодець! Ваша перемога штовхає вас далі в серце невідомого».""")
            global total_points, level, level_2_beated
            total_points += 1
            level += 1
            level_2_beated = 1
            menu()
            break
        else:
            print(f"""
Затамувавши подих, ви спостерігаєте, як двері, які ви обрали, 
відкриваються, відкриваючи жахливе та смертоносне видовище. 
Замість скарбів ви опиняєтеся лицем до лиця з кімнатою, 
що кишить лютими дикими тиграми, їхні очі жадібно дивляться на вас.

Голос говорить, його тон сповнений жалю та занепокоєння:

«Лихо спіткало вас, авантюристе. За дверима, які ви вибрали, 
чекала неприборкана й небезпечна доля. Тигри прагнуть наступної 
їжі, і, здається, ви в меню».

Коли жах стискає ваше серце, ви розумієте, що ваша подорож 
закінчилася трагічно. Ваша пригода закінчується тут, у цій жахливій 
кімнаті приреченості. Скарб, який ви шукали, назавжди залишається 
недосяжним, а Парадокс Монті Холла набуває нового та жахливого значення.

У світі пригод вибір може призвести до тріумфу чи трагедії.
Ваша історія закінчилася, але запам’ятайте її як повчальну історію 
для тих, хто наважується вирушити в невідоме.

Гра закінчена, відважний авантюристе. Нехай ви знайдете спокій 
у великому за межами світі».
{game_over}""")
            break


def level_3_generate_linear_integer_equation():
    a = random.randint(1, 10)
    b = random.randint(1, 10)
    x = b / a
    return f"{a}x = {b}", x


def level_3_generate_linear_real_equation():
    a = random.uniform(0.1, 10.0)
    b = random.uniform(0.1, 10.0)
    x = b / a
    return f"{a:.2f}x = {b:.2f}", x


def level_3_generate_quadratic_positive_discriminant_equation():
    a = random.randint(1, 10)
    b = random.randint(1, 10)
    c = random.randint(1, 10)
    discriminant = b ** 2 - 4 * a * c
    if discriminant <= 0:
        return level_3_generate_quadratic_positive_discriminant_equation()
    x1 = (-b + discriminant ** 0.5) / (2 * a)
    x2 = (-b - discriminant ** 0.5) / (2 * a)
    return f"{a}x^2 + {b}x + {c} = 0", max(x1, x2)


def level_3_generate_quadratic_large_coefficients_equation():
    a = random.randint(10, 100)
    b = random.randint(10, 100)
    c = random.randint(10, 100)
    discriminant = b ** 2 - 4 * a * c
    if discriminant <= 0:
        return level_3_generate_quadratic_large_coefficients_equation()
    x1 = (-b + discriminant ** 0.5) / (2 * a)
    x2 = (-b - discriminant ** 0.5) / (2 * a)
    return f"{a}x^2 + {b}x + {c} = 0", max(x1, x2)


def level_3_generate_quadratic_real_coefficients_equation():
    a = random.uniform(0.1, 10.0)
    b = random.uniform(0.1, 10.0)
    c = random.uniform(0.1, 10.0)
    discriminant = b ** 2 - 4 * a * c
    if discriminant <= 0:
        return level_3_generate_quadratic_real_coefficients_equation()
    x1 = (-b + discriminant ** 0.5) / (2 * a)
    x2 = (-b - discriminant ** 0.5) / (2 * a)
    return f"{a:.2f}x^2 + {b:.2f}x + {c:.2f} = 0", max(x1, x2)


def level_3_solve_equation(equation):
    parts = equation.split('=')
    left_part = parts[0].strip()
    right_part = float(parts[1].strip())
    eval_result = eval(left_part.replace('x', str(right_part)))
    return abs(eval_result - right_part) < 0.01


def level_3():
    equations = 5
    solved_equations = 0
    extra_time = 10 * intelligence
    level_time = (60 * equations) + extra_time

    print("""
    █     ▄███▄      ▄   ▄███▄   █            ▄▄▄▄▀ ▄  █ █▄▄▄▄ ▄███▄   ▄███▄   
    █     █▀   ▀      █  █▀   ▀  █         ▀▀▀ █   █   █ █  ▄▀ █▀   ▀  █▀   ▀  
    █     ██▄▄   █     █ ██▄▄    █             █   ██▀▀█ █▀▀▌  ██▄▄    ██▄▄    
    ███▄  █▄   ▄▀ █    █ █▄   ▄▀ ███▄         █    █   █ █  █  █▄   ▄▀ █▄   ▄▀ 
        ▀ ▀███▀    █  █  ▀███▀       ▀       ▀        █    █   ▀███▀   ▀███▀   
                    █▐                               ▀    ▀                    
                    ▐                                                          

    Ви просуваєтеся глибше в підземелля, залишаючи позаду загадковий 
    Парадокс Монті Голла. Просуваючись вперед, ви потрапляєте в камеру, 
    яка не схожа на жодну з тих, з якими ви стикалися раніше. 
    Повітря насичене таємничою енергією, а стіни переливаються стародавніми 
    рунами.

    Владний голос лунає камерою:

    «Ласкаво просимо, шукаче знань, у Кімнату містичних рівнянь. 
    Тут сама тканина магії переплітається з математикою, 
    і ваші навички будуть перевірені у найнезвичайніший спосіб».

    Голос продовжує:

    «Перед вами лежить низка зачарованих рівнянь, кожне з яких тримає ключ, 
    щоб відкрити наступну частину вашої подорожі. 
    Ці рівняння — не звичайні головоломки; вони — втілення магічних сил, 
    які чекають, поки ви розгадаєте їхні таємниці».

    Дивишся на рівняння, і здається, що вони зміщуються і трансформуються, 
    ніби живі. Голос пояснює:

    «Щоб рухатися вперед, ви повинні розв’язати ці містичні рівняння. 
    Час — ваш ворог, бо магія, яка зв’язує їх, швидкоплинна. 
    Швидко розв’язуйте кожне рівняння, або можливість зникне».

    Перед вами постає перше рівняння, і ви відчуваєте терміновість 
    поставленого завдання. Голос завершує:

    «Приготуйся, відважний шукаче пригод. Кімната містичних рівнянь чекає, 
    і лише твій інтелект і швидке мислення відкриють шлях попереду».

    З почуттям рішучості ви крокуєте вперед, щоб розібратися з магічними 
    рівняннями, знаючи, що кожне рішення наближає вас до серця таємниць 
    підземелля.""")

    equation_generators = [
        level_3_generate_linear_integer_equation,
        level_3_generate_linear_real_equation,
        level_3_generate_quadratic_positive_discriminant_equation,
        level_3_generate_quadratic_large_coefficients_equation,
        level_3_generate_quadratic_real_coefficients_equation,
    ]

    for equation_generator in equation_generators:
        equation, answer = equation_generator()

        print(equation)

        time_remaining = level_time
        start_time = time.time()
        print("Введіть відповідь (округлену до двох цифр після коми):")
        while time_remaining > 0:
            user_answer = float(input(arrow))
            if user_answer == "exit":
                if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
                    exit(0)
            if abs(user_answer - answer) < 0.01:
                print("Правильно.")
                solved_equations += 1
                break
            else:
                print("Відповідь неправильна.")
                time_elapsed = time.time() - start_time
                time_remaining -= extra_time + time_elapsed
        if solved_equations == 5:
            print("""
З рішучістю та швидким мисленням ви вирішуєте кожне з 
містичних рівнянь, представлених перед вами. 
Коли ваші відповіді узгоджуються з прихованою в них магією, 
у кімнаті відбувається глибока трансформація.

Таємнича енергія зривається, а стіни Кімнати містичних 
рівнянь резонують потужним зачаруванням. Перед вами 
матеріалізується блискучий портал світла, що веде до нового 
шляху глибше в підземелля.

Владний голос знову говорить, сповнений захоплення:

«Чудово! Ваш інтелект і рішучість розкрили секрети 
Кімнати містичних рівнянь. Ви використали магію всередині 
себе й заслужили право продовжити».

З почуттям виконаного обов’язку ви проходите через портал, 
готовий зіткнутися з будь-якими викликами та таємницями, 
які вас чекають попереду. Ваша пригода продовжується, 
керуючись новознайденим пануванням над містичними силами, 
які мешкають у цих стародавніх глибинах.

Молодець, відважний авантюристе! Ваша подорож у невідоме 
продовжується».""")
            global total_points, level, level_3_beated
            total_points += 1
            level += 1
            level_3_beated = 1
            menu()
            break
        if time_remaining <= 0:
            print(f"""
Коли ви гарячково намагаєтеся розв’язати останнє містичне 
рівняння, ви відчуваєте, як енергія в камері стає все 
більш нестабільною. Рівняння протистоять вашим зусиллям, 
а магічні символи починають мерехтіти та зникати.

Час вислизає крізь ваші пальці, як пісок, і коли минають 
останні секунди, рівняння розчиняються у вирі хаотичної магії. 
Камера тремтить, і вас охоплює прилив містичної енергії.

Владний голос говорить востаннє, його тон сповнений жалю:

«На жаль, шукаче пригод, пісок часу вичерпався. 
Магія цих рівнянь залишається загадкою, а ціна за невдачу 
висока».

Раптом магічна енергія посилюється, і вас поглинає вир 
неконтрольованих сил. Ваш зір розпливається, 
і світ навколо розпадається на калейдоскоп фарб.

Ваша пригода закінчується тут, у дезорієнтуючому вирі магії. 
Таємниці підземелля залишаться нерозгаданими, а ваша 
історія завершиться в глибинах невизначеності.

Гра закінчена, відважний авантюрист. Нехай ваш дух знайде 
спокій серед магії, яка зараз оточує вас».
{game_over}""")
            break


print("""
 █▀▄▀█ ▄███▄   ▄█▄     ▄  █     ██   ██▄       ▄   ▄███▄      ▄     ▄▄▄▄▀ ▄   █▄▄▄▄ ▄███▄       
█ █ █ █▀   ▀  █▀ ▀▄  █   █     █ █  █  █       █  █▀   ▀      █ ▀▀▀ █     █  █  ▄▀ █▀   ▀      
█ ▄ █ ██▄▄    █   ▀  ██▀▀█     █▄▄█ █   █ █     █ ██▄▄    ██   █    █  █   █ █▀▀▌  ██▄▄        
█   █ █▄   ▄▀ █▄  ▄▀ █   █     █  █ █  █   █    █ █▄   ▄▀ █ █  █   █   █   █ █  █  █▄   ▄▀     
   █  ▀███▀   ▀███▀     █         █ ███▀    █  █  ▀███▀   █  █ █  ▀    █▄ ▄█   █   ▀███▀       
  ▀                    ▀         █           █▐           █   ██        ▀▀▀   ▀                
                                ▀            ▐                                                 
Ласкаво просимо, мандрівнику!

Ви опинилися біля входу в таємниче та старовинне підземелля. 
Повітря насичене очікуванням, і єдине джерело світла -- ваш 
надійний факел. Ваше серцебиття прискорюється, коли ви готуєтеся 
вирушити в небезпечну подорож, сповнену викликів, скарбів і 
неймовірних пригод.

Ваша доля чекає глибоко в цих темних і звивистих коридорах. 
Докажете, що ви герой, чи підземелля забере ще одну жертву? 
Вибір за вами.

Приготуйтеся, відважний шукаче пригод, і нехай ваша кмітливість 
і відвага проведуть вас через невідоме. Ваша пригода починається зараз!""")

print("""
▄█▄     ▄  █ ██   █▄▄▄▄ ██   ▄█▄      ▄▄▄▄▀ ▄███▄   █▄▄▄▄ 
█▀ ▀▄  █   █ █ █  █  ▄▀ █ █  █▀ ▀▄ ▀▀▀ █    █▀   ▀  █  ▄▀ 
█   ▀  ██▀▀█ █▄▄█ █▀▀▌  █▄▄█ █   ▀     █    ██▄▄    █▀▀▌  
█▄  ▄▀ █   █ █  █ █  █  █  █ █▄  ▄▀   █     █▄   ▄▀ █  █  
▀███▀     █     █   █      █ ▀███▀   ▀      ▀███▀     █   
         ▀     █   ▀      █                          ▀    
              ▀          ▀                                

Перш ніж ви вирушите у свою епічну подорож, нам потрібно створити 
вашого персонажа. Для початку надайте такі відомості:

**Ім’я:** Як тебе звати, сміливий авантюристе?""")
while True:
    name = input(arrow)
    if name == "exit":
        if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
            exit(0)
    if name.isalpha():
        break
    else:
        print("Ім’я не повинно мати цифр.")

print("""**Раса:** Виберіть расу свого персонажа з наступних варіантів:
    - 1. Гном
    - 2. Ельф
    - 3. Людина
    - 4. Дракононароджений
    - 5. Орк
    - 6. Гоблін
Введіть номер раси:""")
while True:
    race_choice = input(arrow)
    if race_choice == "exit":
        if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
            exit(0)

    if race_choice == "1":
        race = "Гном"
        break
    elif race_choice == "2":
        race = "Ельф"
        break
    elif race_choice == "3":
        race = "Людина"
        break
    elif race_choice == "4":
        race = "Дракононароджений"
        break
    elif race_choice == "5":
        race = "Орк"
        break
    elif race_choice == "6":
        race = "Гоблін"
        break
    else:
        print("Будь ласка, введіть правильний номер раси.")

print("""**Стать:** Виберіть свою стать: 
    1. Чоловік
    2. Жінка
    3. Бажаю не говорити
Введіть номер статі:""")
while True:
    sex_choice = input(arrow)
    if sex_choice == "exit":
        if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
            exit(0)

    if sex_choice == "1":
        sex = "Чоловік"
        break
    elif sex_choice == "2":
        sex = "Жінка"
        break
    elif sex_choice == "3":
        sex = "Невідома стать"
        break
    else:
        print("Будь ласка, введіть правильний номер статі.")

print("**Вік:** Скільки вам повних років?")
while True:
    age = (input(arrow))
    if age == "exit":
        if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
            exit(0)
    age.isnumeric()
    if age.isnumeric():
        break
    else:
        print("Будь ласка, введіть корректне число.")

print(f"Залишилося очок: {total_points}")
print(f"Сила: {strength}")
print(f"Спритність: {agility}")
print(f"Інтелект: {intelligence}")

while total_points > 0:
    print("Виберіть атрибут для призначення очків (1 - Сила, 2 - Спритність, 3 - Інтелект):")
    while True:
        points_choice = input(arrow)
        if points_choice == "exit":
            if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
                exit(0)
        if points_choice.isdigit():
            points_choice = int(points_choice)  # Перетворюємо введене значення на ціле число
            if 1 <= points_choice <= 3:
                break
            else:
                print("Будь ласка, введіть число від 1 до 3.")
        else:
            print("Будь ласка, введіть коректне число (1, 2 або 3).")

    print("Скільки очок призначити:")
    while True:
        points = input(arrow)
        if points == "exit":
            if input("Ви бажаєте вийти? (yes/no)\n>>>---> ") == "yes":
                exit(0)
        if points.isdigit():
            points = int(points)  # Перетворюємо введене значення на ціле число
            if 0 <= points <= total_points:
                break
            else:
                print(f"Недопустима кількість очок. Виберіть число від 0 до {total_points}.")
        else:
            print("Будь ласка, введіть коректне число.")

    if points_choice == 1:
        strength += points
    elif points_choice == 2:
        agility += points
    elif points_choice == 3:
        intelligence += points

    total_points -= points

    print(f"""Залишилося очок: {total_points}
    Сила: {strength}
    Спритність: {agility}
    Інтелект: {intelligence}""")

print("Ви використали всі доступні очки.")


menu()
